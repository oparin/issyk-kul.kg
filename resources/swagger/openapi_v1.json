{
    "openapi": "3.0.3",
    "info": {
        "title": "issyk-kul.kg API",
        "version": "1.0.0",
        "description": "\n\nSome useful links:\n- [The issyk-kul.kg repository](https://github.com/oparin/issyk-kul.kg)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "oparin85@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "https://issyk-kul.kg/api/v1"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "User authorization"
        },
        {
            "name": "listing",
            "description": "Listing manage"
        }
    ],
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "User's email address",
                                        "example": "user@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User's password",
                                        "example": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "email", "password", "password_confirmation"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 191,
                                        "description": "User's full name",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "User's email address",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "description": "User's password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "description": "Password confirmation",
                                        "example": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration was successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        },
                                        "data": {
                                            "type": "array",
                                            "example": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cities": {
            "get": {
                "tags": [
                    "cities"
                ],
                "summary": "Get all cities",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/City"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/listings": {
            "get": {
                "tags": [
                    "listing"
                ],
                "summary": "Get all listings",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Listings retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Listing"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "listing"
                ],
                "summary": "Create a listing",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 191,
                                        "description": "Listing title",
                                        "example": "Selling a bicycle"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Listing description",
                                        "example": "Excellent bicycle, almost new"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "description": "Listing price",
                                        "example": 120.50
                                    },
                                    "currency": {
                                        "type": "string",
                                        "enum": ["usd", "kgs", null],
                                        "description": "Type of currency for the listing",
                                        "example": "kgs"
                                    },
                                    "price_type": {
                                        "type": "string",
                                        "enum": ["per_person", "per_apartment", null],
                                        "description": "Type of pricing for the listing",
                                        "example": "per_person"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "description": "City ID for the listing",
                                        "example": 3
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Seller's phone number",
                                        "example": "+19995551234"
                                    },
                                    "has_whatsapp": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "Availability on WhatsApp",
                                        "example": 1
                                    },
                                    "has_telegram": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "Availability on Telegram",
                                        "example": 0
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Listing location latitude",
                                        "example": "40.7128"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Listing location longitude",
                                        "example": "-74.0060"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Listing created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Listing"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/listings/{id}": {
            "get": {
                "tags": [
                    "listing"
                ],
                "summary": "Show a listing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Get by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Listing retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Listing"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "put": {
                "tags": [
                    "listing"
                ],
                "summary": "Update a listing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 191,
                                        "description": "Listing title",
                                        "example": "Selling a bicycle"
                                    },
                                    "description": {
                                        "oneOf": [
                                            { "type": "string" },
                                            { "type": "string", "enum": [""] }
                                        ],
                                        "nullable": true,
                                        "description": "Listing description",
                                        "example": "Excellent bicycle, almost new"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "description": "Listing price",
                                        "example": 120.50
                                    },
                                    "currency": {
                                        "type": "string",
                                        "enum": ["usd", "kgs", null],
                                        "description": "Type of currency for the listing",
                                        "example": "kgs"
                                    },
                                    "price_type": {
                                        "type": "string",
                                        "enum": ["per_person", "per_apartment", null],
                                        "description": "Type of pricing for the listing",
                                        "example": "per_person"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "description": "City ID for the listing",
                                        "example": 3
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Seller's phone number",
                                        "example": "+19995551234"
                                    },
                                    "has_whatsapp": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "Availability on WhatsApp",
                                        "example": 1
                                    },
                                    "has_telegram": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "Availability on Telegram",
                                        "example": 0
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Listing location latitude",
                                        "example": "40.7128"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Listing location longitude",
                                        "example": "-74.0060"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Listing updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Listing"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "listing"
                ],
                "summary": "Delete a listing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Listing deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Listing"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "name": {
                        "type": "string",
                        "example": "Nick"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "oparin85@gmail.com"
                    }
                },
                "xml": {
                    "name": "order"
                }
            },
            "City": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 4
                    },
                    "name": {
                        "type": "string",
                        "example": "Каракол"
                    }
                },
                "xml": {
                    "name": "order"
                }
            },
            "Listing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "title": {
                        "type": "string",
                        "example": "Best House"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is the best house"
                    },
                    "price": {
                        "type": "string",
                        "example": "85.50"
                    },
                    "price_type": {
                        "type": "string",
                        "example": "С человека"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+996555123456"
                    },
                    "has_whatsapp": {
                        "type": "boolean",
                        "example": true
                    },
                    "has_telegram": {
                        "type": "boolean",
                        "example": true
                    },
                    "latitude": {
                        "type": "string",
                        "example": "42.647285"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "77.096497"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "26/02/2025 17:57"
                    },
                    "views": {
                        "type": "integer",
                        "format": "int64",
                        "example": 42
                    }
                },
                "xml": {
                    "name": "order"
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "responses": {
            "401": {
                "description": "Unauthorized - Missing or invalid token",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthenticated."
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Record not found"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
